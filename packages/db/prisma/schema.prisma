generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id                  String    @id @default(cuid())
  email               String    @unique
  email_verified      Boolean   @default(false)
  name                String?

  // ---- relations ----
  onboarding          Onboarding?
  emailVerification   EmailVerification?
  householdMember     HouseholdMember?

  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model EmailVerification {
  id                  String    @id @default(cuid())
  code                String    
  expires             DateTime

  user                User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id             String    @unique

  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Onboarding {
  id                  String    @id @default(cuid())
  userinfo_complete   Boolean   @default(false)
  household_complete  Boolean   @default(false)
  user                User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id             String    @unique

  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Household {
  id                  String    @id @default(cuid())
  name                String

  members             HouseholdMember[]

  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model HouseholdMember {
  id                  String    @id @default(cuid())

  household           Household @relation(fields: [household_id], references: [id])
  household_id        String    @unique

  user                User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id             String    @unique

  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}
